[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "x402-agent"
dynamic = ["version"]
description = "A lightweight Python framework for building autonomous AI agents with micropayment capabilities"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "x402-Agent Framework Team", email = "team@x402-agent.dev"}
]
maintainers = [
    {name = "x402-Agent Framework Team", email = "team@x402-agent.dev"}
]
keywords = [
    "ai",
    "agents", 
    "micropayments",
    "blockchain",
    "cryptocurrency",
    "api",
    "automation",
    "web3",
    "usdc",
    "base"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Office/Business :: Financial",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
requires-python = ">=3.8"
dependencies = [
    "requests>=2.28.0",
    "web3>=6.0.0",
    "langchain-core>=0.1.0",
    "cryptography>=3.4.8",
    "pydantic>=2.0.0",
]

[project.optional-dependencies]
solana = [
    "solana>=0.30.0",
    "solders>=0.18.0",
]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=22.0.0",
    "flake8>=4.0.0",
    "mypy>=1.0.0",
    "coverage>=6.0.0",
]
docs = [
    "sphinx>=4.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=0.18.0",
]

[project.scripts]
x402-agent = "x402_agent.cli:main"

[project.urls]
Homepage = "https://github.com/x402-agent/x402-agent-framework"
Documentation = "https://docs.x402-agent.dev"
Repository = "https://github.com/x402-agent/x402-agent-framework"
"Bug Reports" = "https://github.com/x402-agent/x402-agent-framework/issues"

[tool.setuptools]
packages = ["x402_agent"]

[tool.setuptools.dynamic]
version = {attr = "x402_agent.__version__"}

[tool.setuptools.package-data]
x402_agent = ["py.typed"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["x402_agent"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]